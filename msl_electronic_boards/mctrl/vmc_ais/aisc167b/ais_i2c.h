//////////////////////////////////////////////////////////////////////////////
/// \ingroup 12r I^2C Interface
//@{
/// \file ais_i2c.h
///
/// \brief  Header File for Software-emulated I2C Driver Functions
///
/// \author Adam Cwientzek
///
/// \version 0.8
///
/// \date 30.06.2005
///
/// \note Edit this File to change Timeouts or Change I/O Pins for I2C Bus
///
//////////////////////////////////////////////////////////////////////////////

#ifndef _AIS_I2C_H_
#define _AIS_I2C_H_

#include <reg165.h>
#include "ais_typedef.h"

//////////////////////////////////////////////////////////////////////////////
/// Timeout for I2C Bus
//////////////////////////////////////////////////////////////////////////////
#define i2c_timeout 20000

//////////////////////////////////////////////////////////////////////////////
/// Clock Line Open Drain Control
//////////////////////////////////////////////////////////////////////////////
sbit OD_SCL = ODP6^4;

//////////////////////////////////////////////////////////////////////////////
/// Data Line Open Drain Control
//////////////////////////////////////////////////////////////////////////////
sbit OD_SDA = ODP6^5;

//////////////////////////////////////////////////////////////////////////////
/// Clock Line Direction Control
//////////////////////////////////////////////////////////////////////////////
sbit DIR_SCL = DP6^4;

//////////////////////////////////////////////////////////////////////////////
/// Data Line Direction Control
//////////////////////////////////////////////////////////////////////////////
sbit DIR_SDA = DP6^5;

//////////////////////////////////////////////////////////////////////////////
/// Clock Line
//////////////////////////////////////////////////////////////////////////////
sbit DAT_SCL = P6^4;

//////////////////////////////////////////////////////////////////////////////
/// Data Line
//////////////////////////////////////////////////////////////////////////////
sbit DAT_SDA = P6^5;



VMC_UCHAR_8 i2c_init(void);
void i2c_start(void);
VMC_UCHAR_8 i2cStop(void);
VMC_UCHAR_8 i2c_sendByte(VMC_UCHAR_8 data);
VMC_UCHAR_8 i2c_getByte(VMC_UCHAR_8 MasterACK);
void i2c_delay(VMC_UINT_16 count);
VMC_UCHAR_8 i2c_waitDevice(void);


#endif /* _AIS_I2C_H_ */

//@}
