#include "Plans/Attack/TestPlans/TestPassPointMaster1441106724156.h"
using namespace alica;
/*PROTECTED REGION ID(eph1441106724156) ENABLED START*/ //Add additional using directives here
#include <MSLWorldModel.h>
#include <Game.h>
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
    //Plan:TestPassPointMaster

    /* generated comment

     Task: DefaultTask  -> EntryPoint-ID: 1441106724159

     */
    shared_ptr<UtilityFunction> UtilityFunction1441106724156::getUtilityFunction(Plan* plan)
    {
        /*PROTECTED REGION ID(1441106724156) ENABLED START*/

        shared_ptr < UtilityFunction > defaultFunction = make_shared < DefaultUtilityFunction > (plan);
        return defaultFunction;

        /*PROTECTED REGION END*/
    }

    //State: Stop in Plan: TestPassPointMaster

    /*
     *
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : situation start
     *
     * Plans in State:
     *   - Plan - (Name): StopDefault, (PlanID): 1413992626194
     *
     * Tasks:
     *   - DefaultTask (1225112227903) (Entrypoint: 1441106724159)
     *
     * States:
     *   - Stop (1441106914297)
     *   - Start (1441106916517)
     *
     * Vars:
     */
    bool TransitionCondition1441106955179::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1441106953751) ENABLED START*/
        return wm->game->checkSituation(msl::Situation::Start);
        /*PROTECTED REGION END*/

    }

    //State: Start in Plan: TestPassPointMaster

    /*
     *
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : situation stop
     *
     * Plans in State:
     *   - Plan - (Name): PassPlan, (PlanID): 1441106995954
     *
     * Tasks:
     *   - DefaultTask (1225112227903) (Entrypoint: 1441106724159)
     *
     * States:
     *   - Stop (1441106914297)
     *   - Start (1441106916517)
     *
     * Vars:
     */
    bool TransitionCondition1441106956349::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1441106955404) ENABLED START*/
        return wm->game->checkSituation(msl::Situation::Stop);
        /*PROTECTED REGION END*/

    }

}
